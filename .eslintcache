[{"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\index.js":"1","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\reportWebVitals.js":"2","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\App.js":"3","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Navigation.js":"4","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\SeparatorSlike.js":"5","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Separator.js":"6","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\SeparatorUnikatniNamjestaj.js":"7","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\AbonosUkras.js":"8","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\Home.js":"9","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\Contact.js":"10","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\AbonosStolovi.js":"11","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\Product.js":"12","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UnikatniStolovi.js":"13","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UnikatneGarniture.js":"14","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UnikatKlupe.js":"15","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UljeNaPlatnu.js":"16","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UnikatUkras.js":"17","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\AkrilNaPlatnu.js":"18","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\OstaleSlike.js":"19","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Hero.js":"20","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Abonos.js":"21","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Card.js":"22","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Aboutus.js":"23","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Carousel.js":"24","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Quote.js":"25"},{"size":567,"mtime":1613036415722,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1613036415732,"results":"28","hashOfConfig":"27"},{"size":322,"mtime":1613139420442,"results":"29","hashOfConfig":"27"},{"size":3767,"mtime":1613393765579,"results":"30","hashOfConfig":"27"},{"size":1473,"mtime":1613036415708,"results":"31","hashOfConfig":"27"},{"size":762,"mtime":1613036415708,"results":"32","hashOfConfig":"27"},{"size":1723,"mtime":1613036415709,"results":"33","hashOfConfig":"27"},{"size":4848,"mtime":1613569805927,"results":"34","hashOfConfig":"27"},{"size":370,"mtime":1613036415725,"results":"35","hashOfConfig":"27"},{"size":158,"mtime":1613036415724,"results":"36","hashOfConfig":"27"},{"size":4856,"mtime":1613569831674,"results":"37","hashOfConfig":"27"},{"size":1696,"mtime":1613570159094,"results":"38","hashOfConfig":"27"},{"size":4864,"mtime":1613569801948,"results":"39","hashOfConfig":"27"},{"size":4872,"mtime":1613569799651,"results":"40","hashOfConfig":"27"},{"size":4848,"mtime":1613569797671,"results":"41","hashOfConfig":"27"},{"size":4852,"mtime":1613569795548,"results":"42","hashOfConfig":"27"},{"size":4848,"mtime":1613569803935,"results":"43","hashOfConfig":"27"},{"size":4856,"mtime":1613569835728,"results":"44","hashOfConfig":"27"},{"size":4839,"mtime":1613569775495,"results":"45","hashOfConfig":"27"},{"size":642,"mtime":1613036415693,"results":"46","hashOfConfig":"27"},{"size":4200,"mtime":1613036415684,"results":"47","hashOfConfig":"27"},{"size":528,"mtime":1613470028842,"results":"48","hashOfConfig":"27"},{"size":1983,"mtime":1613036415685,"results":"49","hashOfConfig":"27"},{"size":795,"mtime":1613400660712,"results":"50","hashOfConfig":"27"},{"size":1496930,"mtime":1613036415707,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"ax9s5a",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\index.js",[],["114","115"],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\reportWebVitals.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\App.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Navigation.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\SeparatorSlike.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Separator.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\SeparatorUnikatniNamjestaj.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\AbonosUkras.js",["116"],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { toast } from 'react-toastify';\r\nimport '../App.css'\r\n\r\nfunction AbonosUkras() {\r\n  const [products, setProducts] = useState(null)\r\n  const [isOpen, setIsopen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [materijali, setMaterijali] = useState(\"\")\r\n  const [slike, setSlike] = useState(\"\")\r\n  const [opis, setOpis] = useState(\"\")\r\n  const [nameEn, setNameEn] = useState(\"\")\r\n  const [materijaliEn, setMaterijaliEn] = useState(\"\")\r\n  const [opisEn, setOpisEn] = useState(\"\")\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n\r\n  const toggleForm = () => setIsopen(!isOpen)\r\n\r\n\r\n  const deleteProduct = (e) => {\r\n    fetch('https://ercegart.herokuapp.com/products/delete', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:e.currentTarget.dataset.id}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n      toast(\"Obrisano\");\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('https://ercegart.herokuapp.com/products', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:\"abonosUkras\"}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  },[])\r\n\r\n\r\n  const sendData = e => {\r\n    e.preventDefault()\r\n    setIsDisabled(!isDisabled)\r\n    const formData = new FormData()\r\n    for (let i = 0; i < slike.length; i++) {\r\n      formData.append(\"image\", slike[i])\r\n    }\r\n\r\n    console.log(slike)\r\n    formData.append('name', name)\r\n    formData.append(\"materijali\", materijali)\r\n    formData.append(\"opis\", opis)\r\n    formData.append(\"kategorija\", \"abonosUkras\")\r\n    formData.append(\"nameEn\", nameEn)\r\n    formData.append(\"materijaliEn\", materijaliEn)\r\n    formData.append(\"opisEn\", opisEn)\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    fetch('https://ercegart.herokuapp.com/products/add', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setIsDisabled(false)\r\n        setName(\"\")\r\n        setNameEn(\"\")\r\n        setOpis(\"\")\r\n        setOpisEn(\"\")\r\n        setMaterijali(\"\")\r\n        setMaterijaliEn(\"\")\r\n        toast(\"Dodano ne sekiraj se nista.\");\r\n        console.log('Success:', result);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button className=\"open-btn\" onClick={toggleForm}>Dodaj</button>\r\n      {isOpen &&\r\n        <form className=\"form\" onSubmit={sendData} encType=\"multipart/form-data\">\r\n          <button className=\"close-btn\" onClick={toggleForm}>&#10005;</button>\r\n          <div className=\"all-inputs\">\r\n            <input required value={name} className=\"input\" placeholder=\"Ime proizvoda\" onChange={e => setName(e.target.value)} />\r\n            <input required value={nameEn} className=\"input\" placeholder=\"Ime na engleski\" onChange={e => setNameEn(e.target.value)} />\r\n            <input required value={materijali} className=\"input\" placeholder=\"Materijali\" onChange={e => setMaterijali(e.target.value)} />\r\n            <input required value={materijaliEn} className=\"input\" placeholder=\"Materijali ENG\" onChange={e => setMaterijaliEn(e.target.value)} />\r\n            <input required  className=\"input\" multiple type=\"file\" onChange={(e) => setSlike(e.target.files)} />\r\n            <textarea required value={opis} className=\"input\" placeholder=\"Opis\" onChange={e => setOpis(e.target.value)} />\r\n            <textarea required value={opisEn} className=\"input\" placeholder=\"Opis na ENG\" onChange={e => setOpisEn(e.target.value)} />\r\n            <button className=\"form-button\" type=\"submit\" disabled={isDisabled}>{isDisabled ?<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />: \"SPREMI\"}</button>\r\n          </div>\r\n        </form>\r\n      }\r\n      <div className=\"gallery\">\r\n        {products&& products.map(product=>{\r\n          return (\r\n            <div className=\"card-wrapper\">\r\n              <button className=\"delete-btn\" onClick={deleteProduct} data-id={product._id}>X</button>\r\n              <Card product={product} key={product._id}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AbonosUkras;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\Home.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\Contact.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\AbonosStolovi.js",["117"],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { toast } from 'react-toastify';\r\nimport '../App.css'\r\n\r\nfunction AbonosStolovi() {\r\n  const [products, setProducts] = useState(null)\r\n  const [isOpen, setIsopen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [materijali, setMaterijali] = useState(\"\")\r\n  const [slike, setSlike] = useState(\"\")\r\n  const [opis, setOpis] = useState(\"\")\r\n  const [nameEn, setNameEn] = useState(\"\")\r\n  const [materijaliEn, setMaterijaliEn] = useState(\"\")\r\n  const [opisEn, setOpisEn] = useState(\"\")\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n\r\n  const toggleForm = () => setIsopen(!isOpen)\r\n\r\n\r\n  const deleteProduct = (e) => {\r\n    fetch('https://ercegart.herokuapp.com/products/delete', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:e.currentTarget.dataset.id}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n      toast(\"Obrisano\");\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('https://ercegart.herokuapp.com/products', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:\"abonosStolovi\"}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  },[])\r\n\r\n\r\n  const sendData = e => {\r\n    e.preventDefault()\r\n    setIsDisabled(!isDisabled)\r\n    const formData = new FormData()\r\n    for (let i = 0; i < slike.length; i++) {\r\n      formData.append(\"image\", slike[i])\r\n    }\r\n\r\n    console.log(slike)\r\n    formData.append('name', name)\r\n    formData.append(\"materijali\", materijali)\r\n    formData.append(\"opis\", opis)\r\n    formData.append(\"kategorija\", \"abonosStolovi\")\r\n    formData.append(\"nameEn\", nameEn)\r\n    formData.append(\"materijaliEn\", materijaliEn)\r\n    formData.append(\"opisEn\", opisEn)\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    fetch('https://ercegart.herokuapp.com/products/add', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setIsDisabled(false)\r\n        setName(\"\")\r\n        setNameEn(\"\")\r\n        setOpis(\"\")\r\n        setOpisEn(\"\")\r\n        setMaterijali(\"\")\r\n        setMaterijaliEn(\"\")\r\n        toast(\"Dodano ne sekiraj se nista.\");\r\n        console.log('Success:', result);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button className=\"open-btn\" onClick={toggleForm}>Dodaj</button>\r\n      {isOpen &&\r\n        <form className=\"form\" onSubmit={sendData} encType=\"multipart/form-data\">\r\n          <button className=\"close-btn\" onClick={toggleForm}>&#10005;</button>\r\n          <div className=\"all-inputs\">\r\n            <input required value={name} className=\"input\" placeholder=\"Ime proizvoda\" onChange={e => setName(e.target.value)} />\r\n            <input required value={nameEn} className=\"input\" placeholder=\"Ime na engleski\" onChange={e => setNameEn(e.target.value)} />\r\n            <input required value={materijali} className=\"input\" placeholder=\"Materijali\" onChange={e => setMaterijali(e.target.value)} />\r\n            <input required value={materijaliEn} className=\"input\" placeholder=\"Materijali ENG\" onChange={e => setMaterijaliEn(e.target.value)} />\r\n            <input required  className=\"input\" multiple type=\"file\" onChange={(e) => setSlike(e.target.files)} />\r\n            <textarea required value={opis} className=\"input\" placeholder=\"Opis\" onChange={e => setOpis(e.target.value)} />\r\n            <textarea required value={opisEn} className=\"input\" placeholder=\"Opis na ENG\" onChange={e => setOpisEn(e.target.value)} />\r\n            <button className=\"form-button\" type=\"submit\" disabled={isDisabled}>{isDisabled ?<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />: \"SPREMI\"}</button>\r\n          </div>\r\n        </form>\r\n      }\r\n      <div className=\"gallery\">\r\n        {products&& products.map(product=>{\r\n          return (\r\n            <div className=\"card-wrapper\">\r\n              <button className=\"delete-btn\" onClick={deleteProduct} data-id={product._id}>X</button>\r\n              <Card product={product} key={product._id}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AbonosStolovi;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\Product.js",["118"],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UnikatniStolovi.js",["119"],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { toast } from 'react-toastify';\r\nimport '../App.css'\r\n\r\nfunction UnikatniStolovi() {\r\n  const [products, setProducts] = useState(null)\r\n  const [isOpen, setIsopen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [materijali, setMaterijali] = useState(\"\")\r\n  const [slike, setSlike] = useState(\"\")\r\n  const [opis, setOpis] = useState(\"\")\r\n  const [nameEn, setNameEn] = useState(\"\")\r\n  const [materijaliEn, setMaterijaliEn] = useState(\"\")\r\n  const [opisEn, setOpisEn] = useState(\"\")\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n\r\n  const toggleForm = () => setIsopen(!isOpen)\r\n\r\n\r\n  const deleteProduct = (e) => {\r\n    fetch('https://ercegart.herokuapp.com/products/delete', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:e.currentTarget.dataset.id}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n      toast(\"Obrisano\");\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('https://ercegart.herokuapp.com/products', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:\"unikatniStolovi\"}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  },[])\r\n\r\n\r\n  const sendData = e => {\r\n    e.preventDefault()\r\n    setIsDisabled(!isDisabled)\r\n    const formData = new FormData()\r\n    for (let i = 0; i < slike.length; i++) {\r\n      formData.append(\"image\", slike[i])\r\n    }\r\n\r\n    console.log(slike)\r\n    formData.append('name', name)\r\n    formData.append(\"materijali\", materijali)\r\n    formData.append(\"opis\", opis)\r\n    formData.append(\"kategorija\", \"unikatniStolovi\")\r\n    formData.append(\"nameEn\", nameEn)\r\n    formData.append(\"materijaliEn\", materijaliEn)\r\n    formData.append(\"opisEn\", opisEn)\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    fetch('https://ercegart.herokuapp.com/products/add', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setIsDisabled(false)\r\n        setName(\"\")\r\n        setNameEn(\"\")\r\n        setOpis(\"\")\r\n        setOpisEn(\"\")\r\n        setMaterijali(\"\")\r\n        setMaterijaliEn(\"\")\r\n        toast(\"Dodano ne sekiraj se nista.\");\r\n        console.log('Success:', result);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button className=\"open-btn\" onClick={toggleForm}>Dodaj</button>\r\n      {isOpen &&\r\n        <form className=\"form\" onSubmit={sendData} encType=\"multipart/form-data\">\r\n          <button className=\"close-btn\" onClick={toggleForm}>&#10005;</button>\r\n          <div className=\"all-inputs\">\r\n            <input required value={name} className=\"input\" placeholder=\"Ime proizvoda\" onChange={e => setName(e.target.value)} />\r\n            <input required value={nameEn} className=\"input\" placeholder=\"Ime na engleski\" onChange={e => setNameEn(e.target.value)} />\r\n            <input required value={materijali} className=\"input\" placeholder=\"Materijali\" onChange={e => setMaterijali(e.target.value)} />\r\n            <input required value={materijaliEn} className=\"input\" placeholder=\"Materijali ENG\" onChange={e => setMaterijaliEn(e.target.value)} />\r\n            <input required  className=\"input\" multiple type=\"file\" onChange={(e) => setSlike(e.target.files)} />\r\n            <textarea required value={opis} className=\"input\" placeholder=\"Opis\" onChange={e => setOpis(e.target.value)} />\r\n            <textarea required value={opisEn} className=\"input\" placeholder=\"Opis na ENG\" onChange={e => setOpisEn(e.target.value)} />\r\n            <button className=\"form-button\" type=\"submit\" disabled={isDisabled}>{isDisabled ?<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />: \"SPREMI\"}</button>\r\n          </div>\r\n        </form>\r\n      }\r\n      <div className=\"gallery\">\r\n        {products&& products.map(product=>{\r\n          return (\r\n            <div className=\"card-wrapper\">\r\n              <button className=\"delete-btn\" onClick={deleteProduct} data-id={product._id}>X</button>\r\n              <Card product={product} key={product._id}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnikatniStolovi;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UnikatneGarniture.js",["120"],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { toast } from 'react-toastify';\r\nimport '../App.css'\r\n\r\nfunction UnikatneGarniture() {\r\n  const [products, setProducts] = useState(null)\r\n  const [isOpen, setIsopen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [materijali, setMaterijali] = useState(\"\")\r\n  const [slike, setSlike] = useState(\"\")\r\n  const [opis, setOpis] = useState(\"\")\r\n  const [nameEn, setNameEn] = useState(\"\")\r\n  const [materijaliEn, setMaterijaliEn] = useState(\"\")\r\n  const [opisEn, setOpisEn] = useState(\"\")\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n\r\n  const toggleForm = () => setIsopen(!isOpen)\r\n\r\n\r\n  const deleteProduct = (e) => {\r\n    fetch('https://ercegart.herokuapp.com/products/delete', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:e.currentTarget.dataset.id}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n      toast(\"Obrisano\");\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('https://ercegart.herokuapp.com/products', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:\"unikatneGarniture\"}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  },[])\r\n\r\n\r\n  const sendData = e => {\r\n    e.preventDefault()\r\n    setIsDisabled(!isDisabled)\r\n    const formData = new FormData()\r\n    for (let i = 0; i < slike.length; i++) {\r\n      formData.append(\"image\", slike[i])\r\n    }\r\n\r\n    console.log(slike)\r\n    formData.append('name', name)\r\n    formData.append(\"materijali\", materijali)\r\n    formData.append(\"opis\", opis)\r\n    formData.append(\"kategorija\", \"unikatneGarniture\")\r\n    formData.append(\"nameEn\", nameEn)\r\n    formData.append(\"materijaliEn\", materijaliEn)\r\n    formData.append(\"opisEn\", opisEn)\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    fetch('https://ercegart.herokuapp.com/products/add', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setIsDisabled(false)\r\n        setName(\"\")\r\n        setNameEn(\"\")\r\n        setOpis(\"\")\r\n        setOpisEn(\"\")\r\n        setMaterijali(\"\")\r\n        setMaterijaliEn(\"\")\r\n        toast(\"Dodano ne sekiraj se nista.\");\r\n        console.log('Success:', result);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button className=\"open-btn\" onClick={toggleForm}>Dodaj</button>\r\n      {isOpen &&\r\n        <form className=\"form\" onSubmit={sendData} encType=\"multipart/form-data\">\r\n          <button className=\"close-btn\" onClick={toggleForm}>&#10005;</button>\r\n          <div className=\"all-inputs\">\r\n            <input required value={name} className=\"input\" placeholder=\"Ime proizvoda\" onChange={e => setName(e.target.value)} />\r\n            <input required value={nameEn} className=\"input\" placeholder=\"Ime na engleski\" onChange={e => setNameEn(e.target.value)} />\r\n            <input required value={materijali} className=\"input\" placeholder=\"Materijali\" onChange={e => setMaterijali(e.target.value)} />\r\n            <input required value={materijaliEn} className=\"input\" placeholder=\"Materijali ENG\" onChange={e => setMaterijaliEn(e.target.value)} />\r\n            <input required  className=\"input\" multiple type=\"file\" onChange={(e) => setSlike(e.target.files)} />\r\n            <textarea required value={opis} className=\"input\" placeholder=\"Opis\" onChange={e => setOpis(e.target.value)} />\r\n            <textarea required value={opisEn} className=\"input\" placeholder=\"Opis na ENG\" onChange={e => setOpisEn(e.target.value)} />\r\n            <button className=\"form-button\" type=\"submit\" disabled={isDisabled}>{isDisabled ?<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />: \"SPREMI\"}</button>\r\n          </div>\r\n        </form>\r\n      }\r\n      <div className=\"gallery\">\r\n        {products&& products.map(product=>{\r\n          return (\r\n            <div className=\"card-wrapper\">\r\n              <button className=\"delete-btn\" onClick={deleteProduct} data-id={product._id}>X</button>\r\n              <Card product={product} key={product._id}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnikatneGarniture;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UnikatKlupe.js",["121"],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { toast } from 'react-toastify';\r\nimport '../App.css'\r\n\r\nfunction UnikatKlupe() {\r\n  const [products, setProducts] = useState(null)\r\n  const [isOpen, setIsopen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [materijali, setMaterijali] = useState(\"\")\r\n  const [slike, setSlike] = useState(\"\")\r\n  const [opis, setOpis] = useState(\"\")\r\n  const [nameEn, setNameEn] = useState(\"\")\r\n  const [materijaliEn, setMaterijaliEn] = useState(\"\")\r\n  const [opisEn, setOpisEn] = useState(\"\")\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n\r\n  const toggleForm = () => setIsopen(!isOpen)\r\n\r\n\r\n  const deleteProduct = (e) => {\r\n    fetch('https://ercegart.herokuapp.com/products/delete', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:e.currentTarget.dataset.id}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n      toast(\"Obrisano\");\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('https://ercegart.herokuapp.com/products', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:\"unikatKlupe\"}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  },[])\r\n\r\n\r\n  const sendData = e => {\r\n    e.preventDefault()\r\n    setIsDisabled(!isDisabled)\r\n    const formData = new FormData()\r\n    for (let i = 0; i < slike.length; i++) {\r\n      formData.append(\"image\", slike[i])\r\n    }\r\n\r\n    console.log(slike)\r\n    formData.append('name', name)\r\n    formData.append(\"materijali\", materijali)\r\n    formData.append(\"opis\", opis)\r\n    formData.append(\"kategorija\", \"unikatKlupe\")\r\n    formData.append(\"nameEn\", nameEn)\r\n    formData.append(\"materijaliEn\", materijaliEn)\r\n    formData.append(\"opisEn\", opisEn)\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    fetch('https://ercegart.herokuapp.com/products/add', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setIsDisabled(false)\r\n        setName(\"\")\r\n        setNameEn(\"\")\r\n        setOpis(\"\")\r\n        setOpisEn(\"\")\r\n        setMaterijali(\"\")\r\n        setMaterijaliEn(\"\")\r\n        toast(\"Dodano ne sekiraj se nista.\");\r\n        console.log('Success:', result);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button className=\"open-btn\" onClick={toggleForm}>Dodaj</button>\r\n      {isOpen &&\r\n        <form className=\"form\" onSubmit={sendData} encType=\"multipart/form-data\">\r\n          <button className=\"close-btn\" onClick={toggleForm}>&#10005;</button>\r\n          <div className=\"all-inputs\">\r\n            <input required value={name} className=\"input\" placeholder=\"Ime proizvoda\" onChange={e => setName(e.target.value)} />\r\n            <input required value={nameEn} className=\"input\" placeholder=\"Ime na engleski\" onChange={e => setNameEn(e.target.value)} />\r\n            <input required value={materijali} className=\"input\" placeholder=\"Materijali\" onChange={e => setMaterijali(e.target.value)} />\r\n            <input required value={materijaliEn} className=\"input\" placeholder=\"Materijali ENG\" onChange={e => setMaterijaliEn(e.target.value)} />\r\n            <input required  className=\"input\" multiple type=\"file\" onChange={(e) => setSlike(e.target.files)} />\r\n            <textarea required value={opis} className=\"input\" placeholder=\"Opis\" onChange={e => setOpis(e.target.value)} />\r\n            <textarea required value={opisEn} className=\"input\" placeholder=\"Opis na ENG\" onChange={e => setOpisEn(e.target.value)} />\r\n            <button className=\"form-button\" type=\"submit\" disabled={isDisabled}>{isDisabled ?<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />: \"SPREMI\"}</button>\r\n          </div>\r\n        </form>\r\n      }\r\n      <div className=\"gallery\">\r\n        {products&& products.map(product=>{\r\n          return (\r\n            <div className=\"card-wrapper\">\r\n              <button className=\"delete-btn\" onClick={deleteProduct} data-id={product._id}>X</button>\r\n              <Card product={product} key={product._id}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnikatKlupe;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UljeNaPlatnu.js",["122"],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { toast } from 'react-toastify';\r\nimport '../App.css'\r\n\r\nfunction UljeNaPlatnu() {\r\n  const [products, setProducts] = useState(null)\r\n  const [isOpen, setIsopen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [materijali, setMaterijali] = useState(\"\")\r\n  const [slike, setSlike] = useState(\"\")\r\n  const [opis, setOpis] = useState(\"\")\r\n  const [nameEn, setNameEn] = useState(\"\")\r\n  const [materijaliEn, setMaterijaliEn] = useState(\"\")\r\n  const [opisEn, setOpisEn] = useState(\"\")\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n\r\n  const toggleForm = () => setIsopen(!isOpen)\r\n\r\n\r\n  const deleteProduct = (e) => {\r\n    fetch('https://ercegart.herokuapp.com/products/delete', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:e.currentTarget.dataset.id}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n      toast(\"Obrisano\");\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('https://ercegart.herokuapp.com/products', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:\"uljeNaPlatnu\"}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  },[])\r\n\r\n\r\n  const sendData = e => {\r\n    e.preventDefault()\r\n    setIsDisabled(!isDisabled)\r\n    const formData = new FormData()\r\n    for (let i = 0; i < slike.length; i++) {\r\n      formData.append(\"image\", slike[i])\r\n    }\r\n\r\n    console.log(slike)\r\n    formData.append('name', name)\r\n    formData.append(\"materijali\", materijali)\r\n    formData.append(\"opis\", opis)\r\n    formData.append(\"kategorija\", \"uljeNaPlatnu\")\r\n    formData.append(\"nameEn\", nameEn)\r\n    formData.append(\"materijaliEn\", materijaliEn)\r\n    formData.append(\"opisEn\", opisEn)\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    fetch('https://ercegart.herokuapp.com/products/add', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setIsDisabled(false)\r\n        setName(\"\")\r\n        setNameEn(\"\")\r\n        setOpis(\"\")\r\n        setOpisEn(\"\")\r\n        setMaterijali(\"\")\r\n        setMaterijaliEn(\"\")\r\n        toast(\"Dodano ne sekiraj se nista.\");\r\n        console.log('Success:', result);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button className=\"open-btn\" onClick={toggleForm}>Dodaj</button>\r\n      {isOpen &&\r\n        <form className=\"form\" onSubmit={sendData} encType=\"multipart/form-data\">\r\n          <button className=\"close-btn\" onClick={toggleForm}>&#10005;</button>\r\n          <div className=\"all-inputs\">\r\n            <input required value={name} className=\"input\" placeholder=\"Ime proizvoda\" onChange={e => setName(e.target.value)} />\r\n            <input required value={nameEn} className=\"input\" placeholder=\"Ime na engleski\" onChange={e => setNameEn(e.target.value)} />\r\n            <input required value={materijali} className=\"input\" placeholder=\"Materijali\" onChange={e => setMaterijali(e.target.value)} />\r\n            <input required value={materijaliEn} className=\"input\" placeholder=\"Materijali ENG\" onChange={e => setMaterijaliEn(e.target.value)} />\r\n            <input required  className=\"input\" multiple type=\"file\" onChange={(e) => setSlike(e.target.files)} />\r\n            <textarea required value={opis} className=\"input\" placeholder=\"Opis\" onChange={e => setOpis(e.target.value)} />\r\n            <textarea required value={opisEn} className=\"input\" placeholder=\"Opis na ENG\" onChange={e => setOpisEn(e.target.value)} />\r\n            <button className=\"form-button\" type=\"submit\" disabled={isDisabled}>{isDisabled ?<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />: \"SPREMI\"}</button>\r\n          </div>\r\n        </form>\r\n      }\r\n      <div className=\"gallery\">\r\n        {products&& products.map(product=>{\r\n          return (\r\n            <div className=\"card-wrapper\">\r\n              <button className=\"delete-btn\" onClick={deleteProduct} data-id={product._id}>X</button>\r\n              <Card product={product} key={product._id}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UljeNaPlatnu;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\UnikatUkras.js",["123"],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { toast } from 'react-toastify';\r\nimport '../App.css'\r\n\r\nfunction UnikatUkras() {\r\n  const [products, setProducts] = useState(null)\r\n  const [isOpen, setIsopen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [materijali, setMaterijali] = useState(\"\")\r\n  const [slike, setSlike] = useState(\"\")\r\n  const [opis, setOpis] = useState(\"\")\r\n  const [nameEn, setNameEn] = useState(\"\")\r\n  const [materijaliEn, setMaterijaliEn] = useState(\"\")\r\n  const [opisEn, setOpisEn] = useState(\"\")\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n\r\n  const toggleForm = () => setIsopen(!isOpen)\r\n\r\n\r\n  const deleteProduct = (e) => {\r\n    fetch('https://ercegart.herokuapp.com/products/delete', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:e.currentTarget.dataset.id}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n      toast(\"Obrisano\");\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('https://ercegart.herokuapp.com/products', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:\"unikatUkras\"}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  },[])\r\n\r\n\r\n  const sendData = e => {\r\n    e.preventDefault()\r\n    setIsDisabled(!isDisabled)\r\n    const formData = new FormData()\r\n    for (let i = 0; i < slike.length; i++) {\r\n      formData.append(\"image\", slike[i])\r\n    }\r\n\r\n    console.log(slike)\r\n    formData.append('name', name)\r\n    formData.append(\"materijali\", materijali)\r\n    formData.append(\"opis\", opis)\r\n    formData.append(\"kategorija\", \"unikatUkras\")\r\n    formData.append(\"nameEn\", nameEn)\r\n    formData.append(\"materijaliEn\", materijaliEn)\r\n    formData.append(\"opisEn\", opisEn)\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    fetch('https://ercegart.herokuapp.com/products/add', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setIsDisabled(false)\r\n        setName(\"\")\r\n        setNameEn(\"\")\r\n        setOpis(\"\")\r\n        setOpisEn(\"\")\r\n        setMaterijali(\"\")\r\n        setMaterijaliEn(\"\")\r\n        toast(\"Dodano ne sekiraj se nista.\");\r\n        console.log('Success:', result);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button className=\"open-btn\" onClick={toggleForm}>Dodaj</button>\r\n      {isOpen &&\r\n        <form className=\"form\" onSubmit={sendData} encType=\"multipart/form-data\">\r\n          <button className=\"close-btn\" onClick={toggleForm}>&#10005;</button>\r\n          <div className=\"all-inputs\">\r\n            <input required value={name} className=\"input\" placeholder=\"Ime proizvoda\" onChange={e => setName(e.target.value)} />\r\n            <input required value={nameEn} className=\"input\" placeholder=\"Ime na engleski\" onChange={e => setNameEn(e.target.value)} />\r\n            <input required value={materijali} className=\"input\" placeholder=\"Materijali\" onChange={e => setMaterijali(e.target.value)} />\r\n            <input required value={materijaliEn} className=\"input\" placeholder=\"Materijali ENG\" onChange={e => setMaterijaliEn(e.target.value)} />\r\n            <input required  className=\"input\" multiple type=\"file\" onChange={(e) => setSlike(e.target.files)} />\r\n            <textarea required value={opis} className=\"input\" placeholder=\"Opis\" onChange={e => setOpis(e.target.value)} />\r\n            <textarea required value={opisEn} className=\"input\" placeholder=\"Opis na ENG\" onChange={e => setOpisEn(e.target.value)} />\r\n            <button className=\"form-button\" type=\"submit\" disabled={isDisabled}>{isDisabled ?<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />: \"SPREMI\"}</button>\r\n          </div>\r\n        </form>\r\n      }\r\n      <div className=\"gallery\">\r\n        {products&& products.map(product=>{\r\n          return (\r\n            <div className=\"card-wrapper\">\r\n              <button className=\"delete-btn\" onClick={deleteProduct} data-id={product._id}>X</button>\r\n              <Card product={product} key={product._id}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnikatUkras;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\AkrilNaPlatnu.js",["124"],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { toast } from 'react-toastify';\r\nimport '../App.css'\r\n\r\nfunction AkrilNaPlatnu() {\r\n  const [products, setProducts] = useState(null)\r\n  const [isOpen, setIsopen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [materijali, setMaterijali] = useState(\"\")\r\n  const [slike, setSlike] = useState(\"\")\r\n  const [opis, setOpis] = useState(\"\")\r\n  const [nameEn, setNameEn] = useState(\"\")\r\n  const [materijaliEn, setMaterijaliEn] = useState(\"\")\r\n  const [opisEn, setOpisEn] = useState(\"\")\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n\r\n  const toggleForm = () => setIsopen(!isOpen)\r\n\r\n\r\n  const deleteProduct = (e) => {\r\n    fetch('https://ercegart.herokuapp.com/products/delete', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:e.currentTarget.dataset.id}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n      toast(\"Obrisano\");\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('https://ercegart.herokuapp.com/products', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:\"akrilNaPlatnu\"}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  },[])\r\n\r\n\r\n  const sendData = e => {\r\n    e.preventDefault()\r\n    setIsDisabled(!isDisabled)\r\n    const formData = new FormData()\r\n    for (let i = 0; i < slike.length; i++) {\r\n      formData.append(\"image\", slike[i])\r\n    }\r\n\r\n    console.log(slike)\r\n    formData.append('name', name)\r\n    formData.append(\"materijali\", materijali)\r\n    formData.append(\"opis\", opis)\r\n    formData.append(\"kategorija\", \"akrilNaPlatnu\")\r\n    formData.append(\"nameEn\", nameEn)\r\n    formData.append(\"materijaliEn\", materijaliEn)\r\n    formData.append(\"opisEn\", opisEn)\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    fetch('https://ercegart.herokuapp.com/products/add', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setIsDisabled(false)\r\n        setName(\"\")\r\n        setNameEn(\"\")\r\n        setOpis(\"\")\r\n        setOpisEn(\"\")\r\n        setMaterijali(\"\")\r\n        setMaterijaliEn(\"\")\r\n        toast(\"Dodano ne sekiraj se nista.\");\r\n        console.log('Success:', result);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button className=\"open-btn\" onClick={toggleForm}>Dodaj</button>\r\n      {isOpen &&\r\n        <form className=\"form\" onSubmit={sendData} encType=\"multipart/form-data\">\r\n          <button className=\"close-btn\" onClick={toggleForm}>&#10005;</button>\r\n          <div className=\"all-inputs\">\r\n            <input required value={name} className=\"input\" placeholder=\"Ime proizvoda\" onChange={e => setName(e.target.value)} />\r\n            <input required value={nameEn} className=\"input\" placeholder=\"Ime na engleski\" onChange={e => setNameEn(e.target.value)} />\r\n            <input required value={materijali} className=\"input\" placeholder=\"Materijali\" onChange={e => setMaterijali(e.target.value)} />\r\n            <input required value={materijaliEn} className=\"input\" placeholder=\"Materijali ENG\" onChange={e => setMaterijaliEn(e.target.value)} />\r\n            <input required  className=\"input\" multiple type=\"file\" onChange={(e) => setSlike(e.target.files)} />\r\n            <textarea required value={opis} className=\"input\" placeholder=\"Opis\" onChange={e => setOpis(e.target.value)} />\r\n            <textarea required value={opisEn} className=\"input\" placeholder=\"Opis na ENG\" onChange={e => setOpisEn(e.target.value)} />\r\n            <button className=\"form-button\" type=\"submit\" disabled={isDisabled}>{isDisabled ?<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />: \"SPREMI\"}</button>\r\n          </div>\r\n        </form>\r\n      }\r\n      <div className=\"gallery\">\r\n        {products&& products.map(product=>{\r\n          return (\r\n            <div className=\"card-wrapper\">\r\n              <button className=\"delete-btn\" onClick={deleteProduct} data-id={product._id}>X</button>\r\n              <Card product={product} key={product._id}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AkrilNaPlatnu;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\pages\\OstaleSlike.js",["125"],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { toast } from 'react-toastify';\r\nimport '../App.css'\r\n\r\nfunction OstaleSlike() {\r\n  const [products, setProducts] = useState(null)\r\n  const [isOpen, setIsopen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [materijali, setMaterijali] = useState(\"\")\r\n  const [slike, setSlike] = useState(\"\")\r\n  const [opis, setOpis] = useState(\"\")\r\n  const [nameEn, setNameEn] = useState(\"\")\r\n  const [materijaliEn, setMaterijaliEn] = useState(\"\")\r\n  const [opisEn, setOpisEn] = useState(\"\")\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n\r\n  const toggleForm = () => setIsopen(!isOpen)\r\n\r\n\r\n  const deleteProduct = (e) => {\r\n    fetch('https://ercegart.herokuapp.com/delete', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:e.currentTarget.dataset.id}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n      toast(\"Obrisano\");\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('https://ercegart.herokuapp.com/products', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({query:\"ostaleSlike\"}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      setProducts(data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  },[])\r\n\r\n\r\n  const sendData = e => {\r\n    e.preventDefault()\r\n    setIsDisabled(!isDisabled)\r\n    const formData = new FormData()\r\n    for (let i = 0; i < slike.length; i++) {\r\n      formData.append(\"image\", slike[i])\r\n    }\r\n\r\n    console.log(slike)\r\n    formData.append('name', name)\r\n    formData.append(\"materijali\", materijali)\r\n    formData.append(\"opis\", opis)\r\n    formData.append(\"kategorija\", \"ostaleSlike\")\r\n    formData.append(\"nameEn\", nameEn)\r\n    formData.append(\"materijaliEn\", materijaliEn)\r\n    formData.append(\"opisEn\", opisEn)\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    fetch('https://ercegart.herokuapp.com/products/add', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setIsDisabled(false)\r\n        setName(\"\")\r\n        setNameEn(\"\")\r\n        setOpis(\"\")\r\n        setOpisEn(\"\")\r\n        setMaterijali(\"\")\r\n        setMaterijaliEn(\"\")\r\n        toast(\"Dodano ne sekiraj se nista.\");\r\n        console.log('Success:', result);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button className=\"open-btn\" onClick={toggleForm}>Dodaj</button>\r\n      {isOpen &&\r\n        <form className=\"form\" onSubmit={sendData} encType=\"multipart/form-data\">\r\n          <button className=\"close-btn\" onClick={toggleForm}>&#10005;</button>\r\n          <div className=\"all-inputs\">\r\n            <input required value={name} className=\"input\" placeholder=\"Ime proizvoda\" onChange={e => setName(e.target.value)} />\r\n            <input required value={nameEn} className=\"input\" placeholder=\"Ime na engleski\" onChange={e => setNameEn(e.target.value)} />\r\n            <input required value={materijali} className=\"input\" placeholder=\"Materijali\" onChange={e => setMaterijali(e.target.value)} />\r\n            <input required value={materijaliEn} className=\"input\" placeholder=\"Materijali ENG\" onChange={e => setMaterijaliEn(e.target.value)} />\r\n            <input required  className=\"input\" multiple type=\"file\" onChange={(e) => setSlike(e.target.files)} />\r\n            <textarea required value={opis} className=\"input\" placeholder=\"Opis\" onChange={e => setOpis(e.target.value)} />\r\n            <textarea required value={opisEn} className=\"input\" placeholder=\"Opis na ENG\" onChange={e => setOpisEn(e.target.value)} />\r\n            <button className=\"form-button\" type=\"submit\" disabled={isDisabled}>{isDisabled ?<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />: \"SPREMI\"}</button>\r\n          </div>\r\n        </form>\r\n      }\r\n      <div className=\"gallery\">\r\n        {products&& products.map(product=>{\r\n          return (\r\n            <div className=\"card-wrapper\">\r\n              <button className=\"delete-btn\" onClick={deleteProduct} data-id={product._id}>X</button>\r\n              <Card product={product} key={product._id}/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OstaleSlike;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Hero.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Abonos.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Card.js",["126"],"import React from 'react'\r\nimport '../Card.css'\r\nimport patio from '../images/patio.jpg'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction Card(props) {\r\n\r\n\r\n\r\n  return (\r\n    <Link to={'/furniture/'+props.product._id}>\r\n    <div className=\"card-item\" >\r\n      <div className=\"card-picture\" style={{backgroundImage: `url(${props.product.slike[0].path})`}} ></div>\r\n      <div className=\"card-info-wrapper\">\r\n        <p>{props.product.name.hr}</p>\r\n      </div>\r\n    </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Aboutus.js",[],"C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Carousel.js",["127"],"import React, {useState} from 'react'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport patio from '../images/patio.jpg'\r\nimport \"../Card.css\"\r\n\r\nfunction Carousels(props) {\r\n    const [index, setIndex] = useState(0);\r\n  \r\n    const handleSelect = (selectedIndex, e) => {\r\n      setIndex(selectedIndex);\r\n    };\r\n  \r\n    return (\r\n      <Carousel activeIndex={index} onSelect={handleSelect} className=\"carousel-wrapper\">\r\n\r\n      {props.slike&& props.slike.map(slika => {\r\n        return (         \r\n        <Carousel.Item>\r\n        <img\r\n            className=\"d-block w-100 carousel-img\"\r\n            src={slika.path}\r\n            alt=\"Second slide\"\r\n          />\r\n        </Carousel.Item>\r\n         )\r\n      })}\r\n\r\n     \r\n      </Carousel>\r\n    );\r\n  }\r\n  \r\n  export default Carousels;","C:\\Users\\Ismar\\Desktop\\erceg\\ercegartAdmin\\src\\components\\Quote.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":28,"column":9,"nodeType":"138","endLine":28,"endColumn":11,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"133","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"132","severity":1,"message":"140","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":13},{"ruleId":"132","severity":1,"message":"140","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":13},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'config' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'patio' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [id]",{"range":"146","text":"147"},[874,876],"[id]"]